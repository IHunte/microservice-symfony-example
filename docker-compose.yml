version: "3.7"

services:
    mysql:
      image: mysql:8.0
      container_name: project_mysql
      networks:
          - monitoring
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        MYSQL_ROOT_PASSWORD:
        MYSQL_DATABASE: blogapi
        MYSQL_USER: project
        MYSQL_PASSWORD: project
      ports:
        - "3307:3307"


    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: project_phpmyadmin
      links:
        - mysql
      environment:
        PMA_HOST: mysql
        PMA_PORT: 3307
        PMA_ARBITRARY: 1
      networks:
          - monitoring
      ports:
        - "81:80"


    nginx:
        build: docker/nginx
        container_name: project_nginx
        restart: on-failure
        volumes:
            - ${PWD}/api:/var/www/api:delegated
            - ${PWD}/var/logs/nginx/:/var/log/nginx:delegated
            - ${PWD}/docker/nginx/api.conf:/etc/nginx/conf.d/api.conf:delegated
            - ${PWD}/docker/nginx/ui.conf:/etc/nginx/conf.d/ui.conf:delegated
        ports:
            - "90:80"
        networks:
            - monitoring

    api:
        build: docker/php
        container_name: project_api
        restart: on-failure
        volumes:
            - ${PWD}/api:/var/www/api:delegated
            - ${PWD}/docker/php/php.ini:/usr/local/etc/php/php.ini:ro
        networks:
            - monitoring
        depends_on: 
            - nginx

    ui:
      build: ./ui
      container_name: project_ui
      restart: on-failure
      command: "symfony server:start --port=3000"
      depends_on:
        - api
      networks:
        - monitoring
      volumes:
        - ${PWD}/ui:/var/www/ui:delegated
      ports:
      - "3000:3000"

networks:
    monitoring:
        driver: bridge

# volumes
volumes:
  nodemodules: {}
